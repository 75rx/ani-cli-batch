#!/usr/bin/env bash
echo "This is a wrapper for ani-cli that makes it easier to batch download multiple anime"


# Functions

# Display a menu

# This function draws a menu to get user input. Pass a string of text as the first argument and then pass the menu entry options as other arguments when calling the function.
# The function will store the user's choice in the first argument / string of text

function showmenu() {
        echo "Choose an option by selecting it's S.no:"
        # Define variables
        # i is used to iterate over the arguments passed to the function and to display them as a numbered list
        # j is used to skip displaying the first argument as it isn't an option to be displayed but a way to hold the user choice
        local i=1
        local j=1
        # Draw a menu and list the options
        for option in "$@"; do
                if [[ $j -eq 1 ]]; then
                        let "j++"
                else
                        echo"";
                        echo -n "        $i."; echo "$option"
                        echo;
                        let "i++"
                fi
        done
        # Read the user choice
        read -n 1 choice
        echo ""
        # Iterate over the arguments (except the first one) using the variable 'a' to locate the user's choice
        local a=1
        local b=1
        for option in "$@"; do
                if [[ $b -eq 1 ]]; then
                        let "b++"
                else
                        if [[ $a -eq $choice ]]; then
                                # On finding the choice, set it to the 1st argument so it can be accessed outside of the function
                                firstarg=$1
                                eval "$(echo "$firstarg")=$option"
                                break
                        else
                                let "a++"
                        fi
                fi
        done
}

# Selecting a download location
echo; echo "Please provide a download location."
echo "Default is current running directory."
echo "Please note, I don't check permissions yet!"
# TODO: Check perms
directory="$(pwd)"
read directory
while [ ! -d $directory ];
do
        echo "Either I don't know what this is or it's not a directory."
        echo "Please provide a download location:"
        read directory
done
if [[ "" == "$directory" ]];
then
        echo "Keeping current directory."
else
        echo "Changing to $directory."
        cd $directory
fi
echo


addanime=true
command="ani-cli -d"
validchoice=false

while [ $addanime == true ]
do
   echo "What do you want to download?"
   read animename

   echo "Running ani-cli's search operation"
   echo "Exit after finding the correct S.no and episode range"
   ani-cli -d $animename
   #searchresult=$(timeout 5s ani-cli $animename)
   #clear
   #echo $searchresult

   echo "What number on the list was your anime?"
   read selection

   command=$(echo $command $animename -S $selection)
   clear

   echo "What range of episodes do you want to download?"
   read range

   command=$(echo $command -r $range)

   echo "Do you want to specify a download quality (y/n)?"
   read -n 1 qualitychoice

   if [ $qualitychoice == y ]; then
      showmenu quality 240p 360p 480p 720p
      command=$(echo $command -q $quality)
   else 
      echo
   fi

   echo "What do you want to do?"
   echo "1.Continue adding anime"
   echo "2.Execute the download command"
   echo "3.Print the download command and await further instructions"
   echo "4.Cancel operation and quit"

   until [ $validchoice == true ]
   do
      read choice
      case $choice in
         1|add)
            command=$(echo $command "; ani-cli -d" )
            addanime=true
            validchoice=true
            ;;
         2|execute)
            #$command
            #if [ $? == 0 ]; then
            #   addanime=false
            #else
            #   echo "Download failed! Printing the download command."
            #   echo $command
            #   addanime=false
            #fi
            clear
            echo "The script's downloader is experiencing issues rn."
            echo "Just copy and paste this command as a temporary alternative"
            echo $command
            #remove the next line if you uncomment the first 8 lines in this code block.
            addanime=false
            validchoice=true
            ;;
         3|print)
            clear && echo "Printing the download command."
            echo $command
            echo "respond with a ? to view all the available choices"
            validchoice=false
            ;;
         4|cancel)
            echo "Cancelling pending operations and quitting."
            addanime=false
            validchoice=true
            ;;
         *)
            echo "Please make a valid choice!"
            echo "Valid choices include 1, 2, 3, 4, add, execute, print and cancel"
            validchoice=false
            ;;
      esac
   done
   validchoice=false
done
